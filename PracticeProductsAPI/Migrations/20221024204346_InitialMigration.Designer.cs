// <auto-generated />
using CourseLibrary.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace PracticeProductsAPI.Migrations
{
    [DbContext(typeof(PracticeProductsContext))]
    [Migration("20221024204346_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CourseLibrary.API.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Snacks"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Fish and Meat"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Vegetables"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Fruits"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Cheese and Diary"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Cosmetics"
                        });
                });

            modelBuilder.Entity("CourseLibrary.API.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Chips",
                            Price = 5m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Name = "Shrimp",
                            Price = 300m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Name = "Potato",
                            Price = 15m,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Name = "Apple",
                            Price = 15m,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            Name = "Cheese",
                            Price = 200m,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("CourseLibrary.API.Entities.Product", b =>
                {
                    b.HasOne("CourseLibrary.API.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
